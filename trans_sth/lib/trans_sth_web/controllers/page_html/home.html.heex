<!DOCTYPE html>
<html lang="zh-CN">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <style>
      body {
            margin: 0;
            height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #f0f0f0; /* 背景颜色 */
            font-family: Arial, sans-serif; /* 字体 */
        }
        .container {
            display: flex;
            flex-direction: column;
            align-items: center;
            background-color: white; /* 容器背景颜色 */
            padding: 20px;
            border-radius: 8px; /* 圆角 */
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1); /* 阴影 */
        }
        
        .botton {
            padding: 10px;
            margin: 10px 0; /* 按钮间距 */
            border: 1px solid #007bff; /* 边框颜色 */
            border-radius: 5px; /* 边框圆角 */
            background-color: #007bff; /* 按钮背景颜色 */
            color: white; /* 字体颜色 */
            cursor: pointer; /* 鼠标指针 */
            transition: background-color 0.3s; /* 背景颜色过渡 */
            width: auto;
        }
        .botton:hover {
            background-color: #0056b3; /* 悬停时背景颜色 */
        }
        input[type="file"] {
            margin: 10px 0; /* 文件输入框间距 */
        }
        hr {
            width: 100%; /* 分隔线宽度 */
            border: 1px solid #e0e0e0; /* 分隔线颜色 */
            margin: 10px 0; /* 分隔线间距 */
        }
    </style>
  </head>
  <body>
    <.flash_group flash={@flash} />
    <div class="container">
      <div style="display:flex;align-items:center;justify-content: center;flex-direction:column;">
        <input type="botton" value="传输文字" onclick="trans_text()" class="botton" />
        <hr />
        <form>
          <input type="file" id="file-input" multiple />
          <input type="submit" value="传输文件" onclick="trans_file()" class="botton" />
        </form>
      </div>
    </div>
  </body>

  <script type="text/javascript">
    function trans_file () {
      event.preventDefault(); // 防止表单默认提交
      const fileInput = document.getElementById("file-input");
      const formData = new FormData();

      if (fileInput.files.length == 0) {
        return;
      }
      for (const file of fileInput.files) {
        formData.append("files[]", file); // 将每个文件添加到 FormData
      }

      fetch('/api/trans_file', { // 替换为您的上传接口
        method: 'POST',
        body: formData // 直接使用 FormData 对象
      })
      .then(response => {
        if (!response.ok) {
          throw new Error('trans_file Network response was not ok');
        }
        return response.json(); // 解析 JSON 数据
      })
      .then(data => {
        console.log('request trans_file suc, data=', data);
      })
      .catch(error => {
        <%!-- console.error('trans_file There was a problem with the fetch operation:', error); --%>
        console.log('trans_file failed, err=', error);
      });
    }
    function trans_text () {
      fetch("/api/trans_text",{
        method: 'POST', // 指定请求方法为 POST
        headers: {
          'Content-Type': 'application/json' // 指定内容类型为 JSON
        },
      })
        .then(response => {
          if (!response.ok) {
            throw new Error("trans_text Network response was not ok");
          }
          return response.json();
        })
        .then(data => {
          console.log('request trans_text suc, data=', data);
        })
        .catch(error => {
          console.error("trans_text There was a problem with the fetch operation:", error);
        });
    }
  </script>
</html>
